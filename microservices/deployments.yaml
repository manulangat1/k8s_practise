apiVersion: apps/v1
kind: Deployment
metadata:
  name: emailservice
  labels:
    app:
spec:
  replicas: 1
  selector:
    matchLabels:
      app: emailservice
  template:
    metadata:
      labels:
        app: emailservice
    spec:
      containers:
        - name: service
          image: gcr.io/google-samples/microservices-demo/emailservice
          ports:
            - containerPort: 8080
          env:
            - name: PORT
              value: "8080"

---
apiVersion: v1
kind: Service
metadata:
  name: emailservice
  labels:
    app: emailservice
spec:
  type: ClusterIP
  selector:
    app: emailservice
  ports:
    - protocol: TCP
      targetPort: 8080
      port: 5000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: recommendationservice
  labels:
    app: recommendationservice
spec:
  replicas: 1
  selector:
    matchLabels:
      app: recommendationservice
  template:
    metadata:
      labels:
        app: recommendationservice
    spec:
      containers:
        - name: service
          image: gcr.io/google-samples/microservices-demo/recommendationservice
          ports:
            - containerPort: 8080
          env:
            - name: "PORT"
              value: "8080"
            - name: "PRODUCT_CATALOG_SERVICE_ADDR"
              value: "productcatalogservice:3550"
---
apiVersion: v1
kind: Service
metadata:
  name: recommendationservice
  labels:
    app: recommendationservice
spec:
  selector:
    app: recommendationservice
  ports:
    - protocol: TCP
      targetPort: 8080
      port: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: productcatalogservice
  labels:
    app: productcatalogservice
spec:
  replicas: 1
  selector:
    matchLabels:
      app: productcatalogservice
  template:
    metadata:
      labels:
        app: productcatalogservice
    spec:
      containers:
        - name: service
          image: gcr.io/google-samples/microservices-demo/productcatalogservice
          ports:
            - containerPort: 3550
          env:
            - name: "PORT"
              value: "3550"

---
apiVersion: v1
kind: Service
metadata:
  name: productcatalogservice
  labels:
    app: productcatalogservice
spec:
  selector:
    app: productcatalogservice
  ports:
    - protocol: TCP
      targetPort: 3550
      port: 3550
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: paymentservice
  labels:
    app: paymentservice
spec:
  replicas: 1
  selector:
    matchLabels:
      app: paymentservice
  template:
    metadata:
      labels:
        app: paymentservice
    spec:
      containers:
        - name: service
          image: gcr.io/google-samples/microservices-demo/paymentservice
          ports:
            - containerPort: 5051
          env:
            - name: "PORT"
              value: "5051"

---
apiVersion: v1
kind: Service
metadata:
  name: paymentservice
spec:
  selector:
    app: paymentservice
  ports:
    - protocol: TCP
      targetPort: 5051
      port: 5051

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: currencyservice
  labels:
    app: currencyservice
spec:
  replicas: 1
  selector:
    matchLabels:
      app: currencyservice
  template:
    metadata:
      labels:
        app: currencyservice
    spec:
      containers:
        - name: service
          image: gcr.io/google-samples/microservices-demo/currencyservice
          ports:
            - containerPort: 7000
          env:
            - name: "PORT"
              value: "7000"
            # - name: ""
            #   value: ""

---
apiVersion: v1
kind: Service
metadata:
  name: currencyservice
spec:
  selector:
    app: currencyservice
  ports:
    - protocol: TCP
      targetPort: 7000
      port: 7000

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: shippingservice
  labels:
    app: shippingservice
spec:
  replicas: 1
  selector:
    matchLabels:
      app: shippingservice
  template:
    metadata:
      labels:
        app: shippingservice
    spec:
      containers:
        - name: service
          image: gcr.io/google-samples/microservices-demo/shippingservice
          ports:
            - containerPort: 50051
          env:
            - name: "PORT"
              value: "500 51"

---
apiVersion: v1
kind: Service
metadata:
  name: shippingservice
spec:
  selector:
    app: shippingservice
  ports:
    - protocol: TCP
      targetPort: 50051
      port: 5051

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: adservice
  labels:
    app: adservice
spec:
  replicas: 1
  selector:
    matchLabels:
      app: adservice
  template:
    metadata:
      labels:
        app: adservice
    spec:
      containers:
        - name: service
          image: gcr.io/google-samples/microservices-demo/adservice
          ports:
            - containerPort: 9555
          env:
            - name: "PORT"
              value: "9555"

---
apiVersion: v1
kind: Service
metadata:
  name: adservice
spec:
  selector:
    app: adservice
  ports:
    - protocol: TCP
      targetPort: 5051
      port: 5051

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cartservice
  labels:
    app: cartservice
spec:
  replicas: 1
  selector:
    matchLabels:
      app: cartservice
  template:
    metadata:
      labels:
        app: cartservice
    spec:
      containers:
        - name: service
          image: gcr.io/google-samples/microservices-demo/cartservice
          ports:
            - containerPort: 7070
          env:
            - name: "PORT"
              value: "7070"
            - name: "REDIS_ADDR"
              value: "redis-cart:6379"

---
apiVersion: v1
kind: Service
metadata:
  name: cartservice
spec:
  selector:
    app: cartservice
  ports:
    - protocol: TCP
      targetPort: 7070
      port: 7070

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis-cart
  labels:
    app: redis-cart
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis-cart
  template:
    metadata:
      labels:
        app: redis-cart
    spec:
      containers:
        - name: service
          image: redis:alpine
          ports:
            - containerPort: 6379
          volumeMounts:
            - name: redis-data
              mountPath: /data
          env:
            - name: "PORT"
              value: "6379"
      volumes:
        - name: redis-data
          emptyDir: {}

---
apiVersion: v1
kind: Service
metadata:
  name: redis-cart
spec:
  selector:
    app: redis-cart
  ports:
    - protocol: TCP
      targetPort: 6379
      port: 6379

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: checkoutservice
  labels:
    app: checkoutservice
spec:
  replicas: 1
  selector:
    matchLabels:
      app: checkoutservice
  template:
    metadata:
      labels:
        app: checkoutservice
    spec:
      containers:
        - name: service
          image: gcr.io/google-samples/microservices-demo/checkoutservice
          ports:
            - containerPort: 5050
          env:
            - name: "PORT"
              value: "5050"
            - name: "PRODUCT_CATALOG_SERVICE_ADDR"
              value: "productcatalogservice:3550"
            - name: "CURRENCY_SERVICE_ADDR"
              value: "currencyservice:7000"
            - name: "SHIPPING_SERVICE_ADDR"
              value: "shippingservice:50051"
            - name: "PAYMENT_SERVICE_ADDR"
              value: "paymentservice:50051"
            - name: "EMAIL_SERVICE_ADDR"
              value: "emailservice:50051"
            - name: "CART_SERVICE_ADDR"
              value: "cartservice:7070"

---
apiVersion: v1
kind: Service
metadata:
  name: checkoutservice
spec:
  selector:
    app: checkoutservice
  ports:
    - protocol: TCP
      targetPort: 5050
      port: 5050

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontendservice
  labels:
    app: frontendservice
spec:
  replicas: 1
  selector:
    matchLabels:
      app: frontendservice
  template:
    metadata:
      labels:
        app: frontendservice
    spec:
      containers:
        - name: service
          image: gcr.io/google-samples/microservices-demo/frontend
          ports:
            - containerPort: 8080
          env:
            - name: "PORT"
              value: "8080"
            - name: "PRODUCT_CATALOG_SERVICE_ADDR"
              value: "productcatalogservice:3550"
            - name: "CURRENCY_SERVICE_ADDR"
              value: "currencyservice:7000"
            - name: "SHIPPING_SERVICE_ADDR"
              value: "shippingservice:50051"
            - name: "PAYMENT_SERVICE_ADDR"
              value: "paymentservice:50051"
            - name: "EMAIL_SERVICE_ADDR"
              value: "emailservice:50051"
            - name: "CART_SERVICE_ADDR"
              value: "cartservice:7070"

---
apiVersion: v1
kind: Service
metadata:
  name: frontendservice
spec:
  type: LoadBalancer
  selector:
    app: frontendservice
  ports:
    - protocol: TCP
      targetPort: 8080
      port: 8080
      nodePort: 30001
